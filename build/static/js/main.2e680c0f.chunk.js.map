{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","handleChange","onChange","value","PersonForm","props","newName","newNumber","handleSubmit","handleNameChange","handleNumberChange","onSubmit","type","Persons","persons","deletePerson","map","person","name","number","onClick","Notification","message","text","notificationClass","className","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personService","initialPersons","addPerson","returnedPerson","concat","showNotification","updatePerson","updatedPersons","catch","error","setTimeout","personsToShow","toLowerCase","fil","includes","event","target","preventDefault","existingPerson","find","p","window","confirm","alert","deleteId","_","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e680c0f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ filter, handleChange }) => (\n  <div>\n    filter shown with <input onChange={handleChange} value={filter} />\n  </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  const { newName, newNumber, handleSubmit, handleNameChange, handleNumberChange } = props\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input onChange={handleNameChange} value={newName} />\n      </div>\n      <div>\n        number: <input onChange={handleNumberChange} value={newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ persons, deletePerson }) => (\n  <div>\n    {persons.map(person =>\n      <div key={person.name}>\n        <p>{person.name} {person.number}</p>\n        <button onClick={() => deletePerson(person)}>X</button>\n      </div>\n    )}\n  </div>\n)\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message.text === '') {\n    return null\n  }\n\n  const notificationClass = `notification ${message.type}`\n  return (\n    <div className={notificationClass}>\n      {message.text}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteOne = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  deleteOne,\n  update\n}","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState({ text: '', type: '' }) // Message type: error or success\n\n  // Get persons from json-server (once, after initial render)\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const existingPerson = persons.find(p => p.name === newName)\n\n    if (existingPerson && newNumber) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        return updatePerson(existingPerson.id)\n      }\n    }\n\n    if (existingPerson) {\n      return window.alert(`${newName} is already added to phonebook`)\n    }\n\n    addPerson()\n  }\n\n  const addPerson = () => {\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n    personService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        showNotification({\n          text: `Added ${returnedPerson.name}`,\n          type: 'success'\n        })\n      })\n  }\n\n  const updatePerson = (id) => {\n    const updatedPerson = {\n      name: newName,\n      number: newNumber\n    }\n    personService\n      .update(id, updatedPerson)\n      .then(returnedPerson => {\n        const updatedPersons = persons.map(person =>\n          person.id !== id\n            ? person\n            : returnedPerson\n        )\n        setPersons(updatedPersons)\n        setNewName('')\n        setNewNumber('')\n        showNotification({\n          text: `Changed the number of ${returnedPerson.name}`,\n          type: 'success'\n        })\n      })\n      .catch(error => {\n        showNotification({\n          text: `Information of ${newName} has already been removed from server`,\n          type: 'error'\n        })\n      })\n  }\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      const deleteId = person.id\n\n      personService\n        .deleteOne(deleteId)\n        .then(_ => {\n          setPersons(persons.filter(p => p.id !== deleteId))\n          showNotification({\n            text: `Deleted ${person.name}`,\n            type: 'success'\n          })\n        })\n    }\n  }\n\n  const showNotification = (message) => {\n    setMessage(message)\n    setTimeout(() => {\n      setMessage({ text: '', type: '' })\n    }, 3000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const personsToShow = persons.filter((person) => {\n    const name = person.name.toLowerCase()\n    const number = person.number\n    const fil = filter.toLowerCase()\n    return name.includes(fil) || number.includes(fil)\n  })\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter\n        filter={filter}\n        handleChange={handleFilterChange} />\n      <h2>Add new</h2>\n      <PersonForm\n        handleSubmit={handleSubmit}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber} />\n      <h2>Numbers</h2>\n      <Persons\n        persons={personsToShow}\n        deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}